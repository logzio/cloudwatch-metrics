apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "logzio-cloudwatch-metrics.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "logzio-cloudwatch-metrics.name" . }}
    chart: {{ template "logzio-cloudwatch-metrics.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
data:
  {{ if .Values.custom_cloudwatch_config}}
  cloudwatch.yml: |
    {{ tpl .Values.custom_cloudwatch_config . | nindent 4 }}
  {{ else }}
  cloudwatch.yml: |
    metrics: []
  {{ end }}
  config.yml: |
    otel:
      # your logz.io region
      logzio_region: "us"
      # custom listener address
      custom_listener: ""
      # environment tag that will be attached to all samples
      p8s_logzio_name: "cloudwatch-metrics"
      # your logz.io metrics token
      token: ""
      # the time to wait between scrape requests
      scrape_interval: 300
      # the time to wait before throttling remote write post request to logz.io
      remote_timeout: 120
      # the time to wait before throttling a scrape request to cloudwatch exporter
      scrape_timeout: 120
      # opentelemetry log level
      log_level: "debug"
      # python script log level
      logzio_log_level: "info"
      # aws credentials
      AWS_ACCESS_KEY_ID: ""
      AWS_SECRET_ACCESS_KEY: ""
    cloudwatch:
      # set to true if you are loading a custom configuration file for cloudwatch exporter
      custom_config: "false"
      # your cloudwatch aws region
      region: "us-east-1"
      # role arn to assume
      role_arn: ""
      # list of aws cloudwatch namespaces to monitor
      aws_namespaces: []
      # The newest data to request. Used to avoid collecting data that has not fully converged
      delay_seconds: 300
      # how far back to request data for. Useful for cases such as Billing metrics that are only set every few hours
      range_seconds: 300
      # period to request the metric for. Only the most recent data point is used
      period_seconds: 300
      # boolean for whether to set the Prometheus metric timestamp as the original Cloudwatch timestamp
      set_timestamp: "false"
  otel-config.yml: |
    exporters:
      logging:
        loglevel: info
      prometheusremotewrite:
        endpoint:
        external_labels:
          p8s_logzio_name: cloudwatch-metrics
        headers:
          Authorization: 'Bearer '
        timeout: 300s
    processors: null
    receivers:
      prometheus_exec:
        env: []
        exec: java -jar cloudwatch_exporter-0.11.0-jar-with-dependencies.jar 9106
          config_files/cloudwatch.yml
        port: 9106
        scrape_interval: 60s

    extensions:
      health_check:
      pprof:
      zpages:

    service:
      extensions: [health_check,pprof,zpages]
      pipelines:
        metrics:
          exporters:
            - logging
            - prometheusremotewrite
          processors: []
          receivers:
            - prometheus_exec
      telemetry:
        logs:
          level: info


    

